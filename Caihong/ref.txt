https://mertarauh.com/2017/01/18/dont-trust-the-internet-and-how-to-add-an-inductive-proximity-sensor-to-your-3d-printer-the-proper-and-easiest-way/

https://3dprint.wiki/reprap/anet/a8/improvement/autobedleveling

https://www.thingiverse.com/thing:1911146

https://www.instructables.com/id/Enable-Auto-Leveling-for-your-3D-Printer-Marlin-Fi/

http://www.pronterface.com/

https://core3d.tech/2017/09/13/proximity-sensor-detection-lj12a3-4-z-bx-vs-lj12a3-4-zby-wiring/

https://www.instructables.com/id/Using-Repetier-Host-to-Set-Up-Your-Auto-Leveling-P/

http://www.print3dforum.com/showthread.php/488-HOW-TO-Set-up-your-Auto-Levelling-Bed


M111 S247
G28 ; Home extruder
G29


Z_MIN_PROBE_REPEATABILITY_TEST
M48 P10 X100 Y100


Measuring your heat bed flatness
With the 
G29 T P10 V4
 your printer will scan your heatbed in a 10¡Á10 point matrix.



With a firmware based on Marlin 1.1.x the procedure is a bit different as the behaviour of G92 in pre 1.1.x versions was buggy:

Heat your printer up to your printing temperature and allow a few minutes for it to expand and settle
Reset the existing Z-offset to zero
M851 Z0
Home all axes
G28
Move the nozzle to the middle of the bed
G1 X100 Y100
(if your bed is 220 x 220)

Turn off the software endstops with
M211 S0
Move the nozzle down so it is just gripping a piece of standard printer paper
Set the Z-offset to the displayed value. E.g. if the printer displays a Z-Value of -1.23 enter
M851 Z-1.23
Store it to the EEPROM
M500
Important notice! Enable the endstops again with
M211 S1
or the printer head will collide with the bed on the next

G28
command


M302         ; report current cold extrusion state
M302 P0      ; enable cold extrusion checking
M302 P1      ; disable cold extrusion checking
M302 S0      ; always allow extrusion (disable checking)
M302 S170    ; only allow extrusion above 170
M302 S170 P1 ; set min extrude temp to 170 but leave disabled




#define DEFAULT_AXIS_STEPS_PER_UNIT {79.512,79.614,2566.88,760}

#define DEFAULT_AXIS_STEPS_PER_UNIT {80,80,2560,93}

#define DEFAULT_AXIS_STEPS_PER_UNIT { 100,100,400,95 }

#define DEFAULT_AXIS_STEPS_PER_UNIT { 100,100,400,95 }

DEFAULT_AXIS_STEPS_PER_UNIT { 97.56, 97.56, 400, 100.5 }


#define DEFAULT_AXIS_STEPS_PER_UNIT { 100, 100, 402.030457, 103.0927835 }

200*16/3.14/10.95mm = 93.06925 pulses


Get the current steps-per-unit settings with M503.

With EEPROM_SETTINGS enabled:

This setting for all axes is saved with M500 and loaded with M501.
M501 displays everything too!!!!
M502 resets steps-per-unit for all axes to the values from DEFAULT_AXIS_STEPS_PER_UNIT.
M503 displays everything


M413 S1 
Disable power-loss recovery
M413 S0 
Report power-loss recovery state
M413
Power-loss recovery ON
 

Filament runout sensor
https://aus3d.com.au/filament-sensor



PID autotune
M303 [E<index>] S<temp> U1
M303 E-1 S60 U1
M303 E0 S195 U1

Parameters
C<count>	
Cycles. At least 3 cycles are required. Default 5.

[E<index>]	
Hotend index (-1 for heated bed). Default 0.

S<temp>	
Target temperature

U<flag>	
Use PID result. (Otherwise just print it out.)

M303 E0 S195 U1
16:40:36.290 : PID Autotune finished! Put the last Kp, Ki and Kd constants from below into Configuration.h
16:40:36.290 : #define DEFAULT_Kp 17.46
16:40:36.290 : #define DEFAULT_Ki 1.25
16:40:36.290 : #define DEFAULT_Kd 61.15
M301 P17.46 I1.25 D61.15

M303 E-1 S70 U1
16:56:45.354 : PID Autotune finished! Put the last Kp, Ki and Kd constants from below into Configuration.h
#define DEFAULT_bedKp 188.24
#define DEFAULT_bedKi 16.65
#define DEFAULT_bedKd 532.00
M304 P188.24 I16.65 D532.00


DIY reprap full graphics controller with ST7920

http://julesgilson.com/index.php/2017/07/02/fixing-lcd-corruption-on-prusa-i3-mk2-clone-with-ramps-arduino/

in EXP1

should be :
pin 5 > 17
instead you have
pin 5 > 23 which is wrong
Actually it¡¯s pin 3 > 17 and not pin 5

#define ST7920_DELAY_1 DELAY_1_NOP
#define ST7920_DELAY_2 DELAY_2_NOP
#define ST7920_DELAY_3 DELAY_1_NOP

24V ramps
http://www.mythoughtspot.com/2017/09/18/modify-ramps-for-24-volts/
https://www.instructables.com/id/Upgrading-Your-RAMPS-With-High-Power-Components/
1. Diode
2. MOSFET w/heatsink
3. Fuses
4. DC-DC Converter

TMC2208
https://www.instructables.com/id/UART-This-Serial-Control-of-Stepper-Motors-With-th/
